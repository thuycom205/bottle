<?php
	/**
	 * Magento
	 *
	 * NOTICE OF LICENSE
	 *
	 * This source file is subject to the Academic Free License (AFL 3.0)
	 * that is bundled with this package in the file LICENSE_AFL.txt.
	 * It is also available through the world-wide-web at this URL:
	 * http://opensource.org/licenses/afl-3.0.php
	 * If you did not receive a copy of the license and are unable to
	 * obtain it through the world-wide-web, please send an email
	 * to license@magento.com so we can send you a copy immediately.
	 *
	 * DISCLAIMER
	 *
	 * Do not edit or add to this file if you wish to upgrade Magento to newer
	 * versions in the future. If you wish to customize Magento for your
	 * needs please refer to http://www.magento.com for more information.
	 *
	 * @category    design
	 * @package     base_default
	 * @copyright   Copyright (c) 2006-2015 X.commerce, Inc. (http://www.magento.com)
	 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
	 */
?>
<?php
	/**
	 * Shopping cart template
	 *
	 * @see Mage_Checkout_Block_Cart
	 */
?>
<div class="cart">
	<div class="page-title title-buttons">
		<h1><?php echo $this->__('Shopping Cart') ?></h1>
		<?php if(!$this->hasError()): ?>
		<ul class="checkout-types">
<li><a href=""><img src=""></a></li>
			<?php foreach ($this->getMethods('top_methods') as $method): ?>
			<?php if ($methodHtml = $this->getMethodHtml($method)): ?>
			<li><?php echo $methodHtml; ?></li>
			<?php endif; ?>
			<?php endforeach; ?>
		</ul>
		<?php endif; ?>
	</div>
	<?php if($this->getMessagesBlock()->toHtml()): ?><?php echo $this->getMessagesBlock()->toHtml() ?><?php endif;?>
	<?php echo $this->getChildHtml('form_before') ?>
	<?php if ( Mage::getStoreConfig('giftwrap/general/active') ) : ?>

		<?php echo $this->getLayout()->createBlock('giftwrap/giftbox')->setTemplate('giftwrap/giftbox.phtml')->toHtml() ?>

	<?php endif ?>

    <form id="update_qty_form"  action="<?php echo $this->getFormActionUrl() ?>" method="post">
		<?php echo $this->getBlockHtml('formkey'); ?>
		<fieldset>
				<table id="shopping-cart-table" class="data-table cart-table">
					<col style="width: 1%;" />
					<col />
					<col style="width: 1%;" />
					<?php if ($this->helper('wishlist')->isAllowInCart()) : ?>
					<col style="width: 1%;" />
					<?php endif ?>
					<?php if ($this->helper('tax')->displayCartPriceExclTax() || $this->helper('tax')->displayCartBothPrices()): ?>
					<col style="width: 1%;" />
					<?php endif; ?>
					<?php if ($this->helper('tax')->displayCartPriceInclTax() || $this->helper('tax')->displayCartBothPrices()): ?>
					<col style="width: 1%;" />
					<?php endif; ?>
					<col style="width: 1%;" />
					<?php if ($this->helper('tax')->displayCartPriceExclTax() || $this->helper('tax')->displayCartBothPrices()): ?>
					<col style="width: 1%;" />
					<?php endif; ?>
					<?php if ($this->helper('tax')->displayCartPriceInclTax() || $this->helper('tax')->displayCartBothPrices()): ?>
					<col style="width: 1%;" />
					<?php endif; ?>
					
					<?php $mergedCells = ($this->helper('tax')->displayCartBothPrices() ? 2 : 1); ?>
					<thead>
						<tr class="em-block-title">
							<th rowspan="<?php echo $mergedCells; ?>"><span class="nobr"><?php echo $this->__('Product Name') ?></span></th>
							<th rowspan="<?php echo $mergedCells; ?>">&nbsp;</th>
							<th style="display:none" rowspan="<?php echo $mergedCells; ?>"></th>
							<?php if ($this->helper('wishlist')->isAllowInCart()) : ?>
							<th rowspan="<?php echo $mergedCells; ?>" class="a-center"><span class="nobr"><?php echo $this->__('Move to Wishlist') ?></span></th>
							<?php endif ?>
							<th class="a-center" colspan="<?php echo $mergedCells; ?>"><span class="nobr"><?php echo $this->__('Unit Price') ?></span></th>
							<th rowspan="<?php echo $mergedCells; ?>" class="a-center"><?php echo $this->__('Qty') ?></th>
							<th class="a-center last" colspan="<?php echo $mergedCells; ?>"><?php echo $this->__('Subtotal') ?></th>
							
						</tr>
						<?php if ($this->helper('tax')->displayCartBothPrices()): ?>
						<tr>
							<th class="a-right"><?php echo $this->helper('tax')->getIncExcTaxLabel(false) ?></th>
							<th><?php echo $this->helper('tax')->getIncExcTaxLabel(true) ?></th>
							<th class="a-right"><?php echo $this->helper('tax')->getIncExcTaxLabel(false) ?></th>
							<th><?php echo $this->helper('tax')->getIncExcTaxLabel(true) ?></th>
						</tr>
						<?php endif; ?>
					</thead>
					<tfoot>
						<tr style="display: none">
							<td colspan="50" class="a-right">
								<?php if($this->getContinueShoppingUrl()): ?>
								<?php 
									$url = $this->getContinueShoppingUrl();
									if(strpos($url,"quickshop") != false) $url = $this->getBaseUrl();
									?>
                                <button type="button" title="<?php echo Mage::helper('core')->quoteEscape($this->__('Continue Shopping')) ?>" class="button btn-continue" onclick="setLocation('<?php echo Mage::helper('core')->quoteEscape($this->getContinueShoppingUrl()) ?>')"><span><span><?php echo $this->__('Continue Shopping') ?></span></span></button>
								<?php endif; ?>
                            <button type="submit" name="update_cart_action"  value="update_qty" title="<?php echo Mage::helper('core')->quoteEscape($this->__('Update Shopping Cart')); ?>" class="button btn-update"><span><span><?php echo $this->__('Update Shopping Cart'); ?></span></span></button>
                            <button type="submit" name="update_cart_action" value="empty_cart" title="<?php echo Mage::helper('core')->quoteEscape($this->__('Clear Shopping Cart')); ?>" class="button btn-empty" id="empty_cart_button"><span><span><?php echo $this->__('Clear Shopping Cart'); ?></span></span></button>
								<!--[if lt IE 8]>
								<input type="hidden" id="update_cart_action_container" />
								<script type="text/javascript">
									//<![CDATA[
									    Event.observe(window, 'load', function()
									    {
									        // Internet Explorer (lt 8) does not support value attribute in button elements
									        $emptyCartButton = $('empty_cart_button');
									        $cartActionContainer = $('update_cart_action_container');
									        if ($emptyCartButton && $cartActionContainer) {
									            Event.observe($emptyCartButton, 'click', function()
									            {
									                $emptyCartButton.setAttribute('name', 'update_cart_action_temp');
									                $cartActionContainer.setAttribute('name', 'update_cart_action');
									                $cartActionContainer.setValue('empty_cart');
									            });
									        }
									
									    });
									//]]>
								</script>
								<![endif]-->
							</td>
						</tr>
					</tfoot>
					<tbody>
						<?php foreach($this->getItems() as $_item): ?>
						<?php echo $this->getItemHtml($_item) ?>
						<?php endforeach ?>
					</tbody>
				</table>
			<script type="text/javascript">decorateTable('shopping-cart-table')</script>
		</fieldset>
	</form>
    <div id="totals_anchor" style="display: none">
        <?php echo $this->getChildHtml('totals'); ?>

    </div>
	<div class="cart-collaterals row">
		<div class="first col-md-24 col-sm-24">
			<div class="row">
				<div class="col-sm-24 col-md-16">
					<?php echo $this->getChildHtml('coupon') ?>
				</div>
				<div class="col-sm-24 col-md-8">
                    <!--Aiden implement google look up address feature-->
                    <div id="locationField">
                        <input id="autocomplete" placeholder="Enter your address(Google autocomplete address form)" onfocus="geolocate()" type="text" autocomplete="off">
                    </div>

                    <!--End of google look up-->
					<?php /* Extensions placeholder */ ?>
					<?php echo $this->getChildHtml('checkout.cart.extra') ?>
					<?php if (!$this->getIsVirtual()): echo $this->getChildHtml('shipping'); endif; ?>
				</div>
			</div>
		</div>
		<div class="last totals col-md-24 col-sm-24">
			<div class="em-box-cart">
				<h2><?php echo $this->__('Order Total') ?></h2>
				<div class="em-box totals-wrapper" id="totals-wrapper">
				<?php echo $this->getChildHtml('totals'); ?>

				<?php if(!$this->hasError() || true): ?>
					<ul class="checkout-types">
						<?php foreach ($this->getMethods('methods') as $method): ?>
						<?php if ($methodHtml = $this->getMethodHtml($method)): ?>

						<li><?php echo $methodHtml; ?></li>
						<?php endif; ?>
						<?php endforeach; ?>
					</ul>
				</div>
				<?php endif; ?>
			</div>
		</div>
	</div>
    <?php if(Mage::helper('themeframework/settings')->getCrossell_Display()!='disable'):?>
		<?php if(Mage::helper('themeframework/settings')->getCrossell_Display()=='replace' || ( Mage::helper('themeframework/settings')->getCrossell_Display()=='dont_replace' && !($this->getChildHtml('crosssell'))) ):?>
		<?php echo $this->getChildHtml('replace.crosssell') ?>
		<?php else:?>
		<?php echo $this->getChildHtml('crosssell') ?>
		<?php endif;?>
	<?php endif;?>
</div>

<script>
    var button = jQuery(".qty-ctl").find('.increase');

    button.on('click', function (e) {
            e.preventDefault();
            var form = jQuery('#update_qty_form');
            var formData = form.serializeArray();
            var postData = {
                form_key: formData[0].value,
                update_cart_action: 'update_qty'
            };
            formData.push({ name: 'update_cart_action', value: "update_qty" });

            postData[formData[1].name] = formData[1].value;

            jQuery.ajax({
                url: "<?php echo $this->getFormActionAjaxUrl() ?>",
                method: form.attr('method'),
                data: formData
            }).done(function(res) {
                var response = JSON.parse(res);
                jQuery('#update_qty_form').first().html(response.cart);

                var updatedTotals = jQuery('#totals_anchor').find('table').html();
                jQuery('#totals-wrapper').find('table').html(updatedTotals );

                jQuery('.em-wrapper-topcart').html(response.cart_sidebar);

            });
        }
    );
</script>

<script>
	jQuery('.widget-product-calc').parent().css('display', 'none');
</script>

<script>
    var button = jQuery(".qty-ctl").find('.decrease');

    button.on('click', function (e) {
            e.preventDefault();
            var form = jQuery('#update_qty_form');
            var formData = form.serializeArray();
            var postData = {
                form_key: formData[0].value,
                update_cart_action: 'update_qty'
            };
            formData.push({ name: 'update_cart_action', value: "update_qty" });

            postData[formData[1].name] = formData[1].value;

            jQuery.ajax({
                url: "<?php echo $this->getFormActionAjaxUrl() ?>",
                method: form.attr('method'),
                data: formData
            }).done(function(res) {
                var response = JSON.parse(res);
                jQuery('#update_qty_form').first().html(response.cart);

                var updatedTotals = jQuery('#totals_anchor').find('table').html();
                jQuery('#totals-wrapper').find('table').html(updatedTotals );

                jQuery('.em-wrapper-topcart').html(response.cart_sidebar);
            });
        }
    );

    //update the shipping cost automatically
    jQuery('input[name="estimate_method"]').on('click',function(){

        var dataSubmit = jQuery('#co-shipping-method-form').serialize();
        jQuery.ajax({
                url:jQuery('#co-shipping-method-form').attr('action'),
                method:"GET",
                data :dataSubmit
            }

        ).done(function () {
            jQuery.ajax(
                {
                    url : '<?php echo Mage::getUrl('checkout/cart/getcartinfo') ?>',
                    method:'GET'
                }
            ).done(function(response) {
                    var responseObj = JSON.parse(response);
                    jQuery('#update_qty_form').html(responseObj.cart );

                    var updatedTotals = jQuery('#totals_anchor').find('table').html();
                    jQuery('#totals-wrapper').find('table').html(updatedTotals );
            })
        })
    });

</script>

<style>
.checkout-cart-index  .em-main-container.em-col1-layout .cart-collaterals.row{

	padding: 0 10px;

}

.checkout-cart-index  .em-main-container.em-col1-layout .cart-collaterals .first.col-md-24.col-sm-24{

	padding: 0;

	border: 1px solid #eee;

	border-bottom: none;

	border-top: none;

}

.checkout-cart-index  .em-main-container.em-col1-layout .cart-collaterals .last.totals.col-md-24.col-sm-24{

	padding: 0;

}

.checkout-cart-index  .em-main-container.em-col1-layout .cart-collaterals h2{

	display: none;

}

.checkout-cart-index  .em-main-container.em-col1-layout .last.totals .em-box{

	border: none;

	padding: 0;

}

.checkout-cart-index .em-main-container.em-col1-layout form#discount-coupon-form .discount-form.em-box{

	border: none;

	min-height: auto;

}

.checkout-cart-index .em-main-container.em-col1-layout .last.totals .em-box{

	min-height: auto;

}

.checkout-cart-index  .em-main-container.em-col1-layout .em-box table#shopping-cart-totals-table{

	border: 1px solid #eee;

	border-top: none;

}

.checkout-cart-index  .em-main-container.em-col1-layout .em-box ul.checkout-types{

	border: 1px solid #eee;

	background-color: #f8f8f8;

	border-radius: 5px;

}

.checkout-cart-index  .em-main-container.em-col1-layout .cart-collaterals .first .shipping {

	padding: 20px;

}







form#discount-coupon-form .discount.em-box-cart label[for="coupon_code"] {

	width: 100%;

}

.checkout-cart-index  .em-main-container.em-col1-layout .cart-collaterals .input-box {

	height: 35px;

	float: left;

}

.checkout-cart-index  .em-main-container.em-col1-layout .input-box > input{

	height: 100%;

}

.checkout-cart-index  .em-main-container.em-col1-layout .cart-collaterals .buttons-set{

	padding: 0;

	margin: 0;

	height: 35px;

}

.checkout-cart-index  .em-main-container.em-col1-layout .cart-collaterals .buttons-set > button{

	height: 100%;

	margin: 0;

}





ul#shipping_estimation > li > label{

	display: none !important;

}

form#shipping-zip-form > p{

	font-weight: 700;

	float: right;

}

#destination-type ul li input{

	float: right;

}

#destination-type ul li label {

	float: right;

	padding: 0;

	margin: 0 !important;

	margin-right: 10px !important;

}





table#shopping-cart-totals-table td{

	padding-right: 20px;

}

table#shopping-cart-totals-table td span{

	    text-align: right;

}



.checkout-cart-index  .em-main-container.em-col1-layout ul.checkout-types{

	padding: 20px;

}

.checkout-cart-index  .em-main-container.em-col1-layout .checkout-types li button.btn-checkout{

	width: auto !important;

	float: right;

}

.checkout-cart-index  .em-main-container.em-col1-layout  ul.checkout-types li{

	width: auto !important;

	float: left;

}



.checkout-cart-index  .em-main-container.em-col1-layout ul.checkout-types li:nth-last-child(3){

	float: right;

}

.checkout-cart-index  .em-main-container.em-col1-layout ul.checkout-types li.checkout-paypal {

	display: block;

	float: none;

	clear: both;

	text-align: right;

}

.checkout-cart-index  .em-main-container.em-col1-layout ul.checkout-types li.checkout-paypal:after{

	content: " ";

	display: table;

	clear: both;

}



.checkout-cart-index  .em-main-container.em-col1-layout ul.checkout-types{

    position: relative;

    text-align: right;

}

.checkout-cart-index  .em-main-container.em-col1-layout ul.checkout-types li:nth-last-child(2){

    float: none;

    margin-bottom: 30px;

}

.checkout-cart-index  .em-main-container.em-col1-layout ul.checkout-types li:nth-last-child(2):after{

    content: " ";

    display: table;

    clear: both;

}

.checkout-cart-index  .em-main-container.em-col1-layout ul.checkout-types li:nth-last-child(5){

    position: absolute;

    bottom: 10px;

    right: 20px;

}

table#shopping-cart-table th, table#shopping-cart-table th span, table#shopping-cart-table th p, table#shopping-cart-table td, table#shopping-cart-table td a,table#shopping-cart-table td p,table#shopping-cart-table td span{ font-size: 15px !important}
table#shopping-cart-table td a.btn-remove, table#shopping-cart-table td a.btn-remove2{
  font-size: 0 !important;
}

div#locationField {
    padding: 0 20px;
}
input#autocomplete {
    width: 100%;
}
</style>

<!--Google address look up-->
<script>
    var placeSearch, autocomplete;
    var componentForm = {
        street_number: 'short_name',
        route: 'long_name',
        locality: 'long_name',
        administrative_area_level_1: 'short_name',
        country: 'long_name',
        postal_code: 'short_name'
    };

    function initAutocomplete() {
        // Create the autocomplete object, restricting the search to geographical
        // location types.
        autocomplete = new google.maps.places.Autocomplete(
            /** @type {!HTMLInputElement} */
            (document.getElementById('autocomplete')),
            {types: ['geocode']});

        // When the user selects an address from the dropdown, populate the address
        // fields in the form.
        autocomplete.addListener('place_changed', fillInAddress);
    }

    function fillInAddress() {
        // Get the place details from the autocomplete object.
        var place = autocomplete.getPlace();

        for (var component in componentForm) {
           // document.getElementById(component).value = '';
           // document.getElementById(component).disabled = false;
            //country
            document.getElementById('country').value = '';
            document.getElementById('country').disabled = false;

            //city
            document.getElementById('city').value = '';
            document.getElementById('city').disabled = false;

            //city
            document.getElementById('postcode').value = '';
            document.getElementById('postcode').disabled = false;
        }

        // Get each component of the address from the place details
        // and fill the corresponding field on the form.
        for (var i = 0; i < place.address_components.length; i++) {
            var addressType = place.address_components[i].types[0];
            if (componentForm[addressType]) {
                var val = place.address_components[i][componentForm[addressType]];
               // document.getElementById(addressType).value = val;

                //country
                if (addressType == 'country')  {
                   // document.getElementById(addressType).value = val;
                    jQuery('#country').find("option").filter(function(){
                        return ( (jQuery(this).val() == val) || (jQuery(this).text() == val) )
                    }).prop('selected', true);
                }

                if (addressType == 'locality')  document.getElementById('city').value = val;
                if (addressType == 'postal_code')  document.getElementById('postcode').value = val;
            }
        }
    }

    // Bias the autocomplete object to the user's geographical location,
    // as supplied by the browser's 'navigator.geolocation' object.
    function geolocate() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
                var geolocation = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };
                var circle = new google.maps.Circle({
                    center: geolocation,
                    radius: position.coords.accuracy
                });
                autocomplete.setBounds(circle.getBounds());
            });
        }
    }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAgTnWc3G4oZ_6suaU1vlAFqvGlbidACtY&libraries=places&callback=initAutocomplete"
        async defer></script>
